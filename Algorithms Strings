1. Super Reduced String

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'superReducedString' function below.
#
# The function is expected to return a STRING.
# The function accepts STRING s as parameter.
#

def superReducedString(s):
    # Write your code here
    
    result=[]
    for letter in range(len(s)):
        if len(result)==0 or s[letter] != result[-1]:
            result.append(s[letter])
        else:
            result.pop()
        
    if len(result)== 0:
        return "Empty String"
    else:
        return "".join(result)
    
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = superReducedString(s)

    fptr.write(result + '\n')

    fptr.close()

----------------------
2. CamelCase

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'camelcase' function below.
#
# The function is expected to return an INTEGER.
# The function accepts STRING s as parameter.
#

def camelcase(s):
    # Write your code here
    sol = 1
    for letter in s:
        if letter.isupper():
            sol = sol+1
        if not s:
            sol = 0
    return sol            
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = camelcase(s)

    fptr.write(str(result) + '\n')

    fptr.close()


---------------------
3. Mars Exploration

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'marsExploration' function below.
#
# The function is expected to return an INTEGER.
# The function accepts STRING s as parameter.
#

def marsExploration(s):
    # Write your code here
    count=0
    i=0
    r = len (s)//3
    #"SOS"*repeated
    
    for char in range(r):
        if s[i] != 'S':
            count+=1
        if s[i+1] != 'O':
            count+=1
        if s[i+2]!= 'S':
            count+=1 
        i += 3       
    return count

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = marsExploration(s)

    fptr.write(str(result) + '\n')

    fptr.close()

----------------------
4. HackerRank in a String!

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'hackerrankInString' function below.
#
# The function is expected to return a STRING.
# The function accepts STRING s as parameter.
#

def hackerrankInString(s):
    # Write your code here
    h = "hackerrank"
    length_h= len(h)
    
    count=0
    for char in s:
        if char == h[count]:
            count = count +1
            if count == length_h:
                return "YES"
    return "NO"            
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    q = int(input().strip())

    for q_itr in range(q):
        s = input()

        result = hackerrankInString(s)

        fptr.write(result + '\n')

    fptr.close()

---------------------
5. Pangrams

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'pangrams' function below.
#
# The function is expected to return a STRING.
# The function accepts STRING s as parameter.
#

def pangrams(s):
    # Write your code here
    alphabet="abcdefghijklmnopqrstuvwxyz"
    s=s.lower()
    for letter in alphabet:
        if letter not in s:
            return "not pangram"
    return  "pangram"    
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = pangrams(s)

    fptr.write(result + '\n')

    fptr.close()

